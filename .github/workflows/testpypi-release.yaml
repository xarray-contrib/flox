name: Build and Upload to TestPyPI

on:
  push:
    branches:
      - "main"
  pull_request:
    types: [opened, reopened, synchronize, labeled]
    branches:
      - "*"
  workflow_dispatch:

# no need for concurrency limits

jobs:
  build-artifacts:
    if: ${{ contains( github.event.pull_request.labels.*.name, 'test-build') && github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Python and uv
        uses: astral-sh/setup-uv@v4
        with:
          python-version: "3.x"

      # - name: Disable local versions
      #   run: |
      #     python .github/workflows/configure-testpypi-version.py pyproject.toml
      #     git update-index --assume-unchanged pyproject.toml
      #     cat pyproject.toml

      - name: Build tarball and wheels
        run: |
          git clean -xdf
          uv build

      - name: Check built artifacts
        run: |
          uv pip install twine
          uv run twine check --strict dist/*
          if [ -f dist/flox-999.tar.gz ]; then
            echo "❌ INVALID VERSION NUMBER"
            exit 1
          else
            echo "✅ Looks good"
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: releases
          path: dist

  test-built-dist:
    needs: build-artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python and uv
        uses: astral-sh/setup-uv@v4
        with:
          python-version: "3.x"
      - uses: actions/download-artifact@v4
        with:
          name: releases
          path: dist
      - name: List contents of built dist
        run: |
          ls -ltrh
          ls -ltrh dist

      - name: Verify the built dist/wheel is valid
        run: |
          uv pip install dist/flox*.whl
          # python -m cf_xarray.scripts.print_versions

      # - name: Publish package to TestPyPI
      #   uses: pypa/gh-action-pypi-publish@v1.6.4
      #   with:
      #     password: ${{ secrets.TESTPYPI_TOKEN }}
      #     repository_url: https://test.pypi.org/legacy/
      #     verbose: true
