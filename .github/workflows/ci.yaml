name: CI
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "*"
  schedule:
    - cron: "0 0 * * *" # Daily “At 00:00”
  workflow_dispatch: # allows you to trigger manually

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test (${{matrix.env}}, ${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        env: ["environment"]
        python-version: ["3.10", "3.13"]
        include:
          - os: "windows-latest"
            env: "environment"
            python-version: "3.13"
          - os: "ubuntu-latest"
            env: "no-dask" # "no-xarray", "no-numba"
            python-version: "3.13"
          - os: "ubuntu-latest"
            env: "minimal-requirements"
            python-version: "3.10"
          - os: "windows-latest"
            env: "env-numpy1"
            python-version: "3.10"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.
      - name: Set environment variables
        run: |
          echo "PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV
      - name: Set up conda environment
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: ci/${{ matrix.env }}.yml
          environment-name: flox-tests
          init-shell: bash
          cache-environment: true
          create-args: |
            python=${{ matrix.python-version }}
      - name: Install flox
        run: |
          python -m pip install --no-deps -e .

      # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache
      - name: Restore cached hypothesis directory
        id: restore-hypothesis-cache
        uses: actions/cache/restore@v4
        with:
          path: .hypothesis/
          key: cache-hypothesis-${{ runner.os }}-${{ matrix.python-version }}-${{ github.run_id }}
          restore-keys: |
            cache-hypothesis-${{ runner.os }}-${{ matrix.python-version }}-

      - name: Run Tests
        id: status
        run: |
          python -c "import xarray; xarray.show_versions()"
          pytest --durations=20 --durations-min=0.5 -n auto --cov=./ --cov-report=xml --hypothesis-profile ci
      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v5.4.0
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: RUNNER_OS,PYTHON_VERSION
          name: codecov-umbrella
          fail_ci_if_error: false

      # explicitly save the cache so it gets updated, also do this even if it fails.
      - name: Save cached hypothesis directory
        id: save-hypothesis-cache
        if: always() && steps.status.outcome != 'skipped'
        uses: actions/cache/save@v4
        with:
          path: .hypothesis/
          key: cache-hypothesis-${{ runner.os }}-${{ matrix.python-version }}-${{ github.run_id }}

  xarray-groupby:
    name: xarray-groupby
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: "pydata/xarray"
          fetch-depth: 0 # Fetch all history for all branches and tags.
      - name: Set up conda environment
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: ci/requirements/environment.yml
          environment-name: xarray-tests
          init-shell: bash
          cache-environment: true
          create-args: >-
            python=3.11
            pint>=0.22
      - name: Install xarray
        run: |
          python -m pip install --no-deps .
      - name: Install upstream flox
        run: |
          python -m pip install --no-deps \
            git+https://github.com/dcherian/flox.git@${{ github.ref }}
      - name: Version info
        run: |
          conda info -a
          conda list
          python xarray/util/print_versions.py
      - name: import xarray
        run: |
          python -c 'import xarray'
      - name: import flox
        run: |
          python -c 'import flox'
      - name: Run Tests
        if: success()
        id: status
        run: |
          set -euo pipefail
          python -m pytest -n auto \
              xarray/tests/test_groupby.py \
              xarray/tests/test_units.py::TestDataArray::test_computation_objects \
              xarray/tests/test_units.py::TestDataArray::test_grouped_operations \
              xarray/tests/test_units.py::TestDataArray::test_resample \
              xarray/tests/test_units.py::TestDataset::test_computation_objects \
              xarray/tests/test_units.py::TestDataset::test_grouped_operations \
              xarray/tests/test_units.py::TestDataset::test_resample
