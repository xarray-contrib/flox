name: CI Additional
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "*"
  workflow_dispatch: # allows you to trigger manually

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-ci-trigger:
    name: detect ci trigger
    runs-on: ubuntu-latest
    if: |
      github.repository == 'xarray-contrib/flox'
      && (github.event_name == 'push' || github.event_name == 'pull_request')
    outputs:
      triggered: ${{ steps.detect-trigger.outputs.trigger-found }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: xarray-contrib/ci-trigger@v1.2
        id: detect-trigger
        with:
          keyword: "[skip-ci]"

  doctest:
    name: Doctests
    runs-on: "ubuntu-latest"
    needs: detect-ci-trigger
    if: needs.detect-ci-trigger.outputs.triggered == 'false'
    defaults:
      run:
        shell: bash -l {0}

    env:
      CONDA_ENV_FILE: ci/environment.yml
      PYTHON_VERSION: "3.13"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.

      - name: set environment variables
        run: |
          echo "TODAY=$(date  +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: ${{env.CONDA_ENV_FILE}}
          environment-name: flox-tests
          init-shell: bash
          cache-environment: true
          cache-environment-key: "${{runner.os}}-${{runner.arch}}-py${{env.PYTHON_VERSION}}-${{env.TODAY}}-${{hashFiles(env.CONDA_ENV_FILE)}}"
          create-args: |
            python=${{ env.PYTHON_VERSION }}

      - name: Install flox
        run: |
          python -m pip install --no-deps -e .
      - name: Version info
        run: |
          conda info -a
          conda list
      - name: Run doctests
        run: |
          python -m pytest --doctest-modules \
          flox/aggregations.py flox/core.py flox/xarray.py \
          --ignore flox/tests \
          --cov=./ --cov-report=xml
      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v5.4.0
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: RUNNER_OS
          name: codecov-umbrella
          fail_ci_if_error: false

  mypy:
    name: Mypy
    runs-on: "ubuntu-latest"
    needs: detect-ci-trigger
    if: needs.detect-ci-trigger.outputs.triggered == 'false'
    defaults:
      run:
        shell: bash -l {0}
    env:
      CONDA_ENV_FILE: ci/environment.yml
      PYTHON_VERSION: "3.13"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.

      - name: set environment variables
        run: |
          echo "TODAY=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: ${{env.CONDA_ENV_FILE}}
          environment-name: flox-tests
          init-shell: bash
          cache-environment: true
          cache-environment-key: "${{runner.os}}-${{runner.arch}}-py${{env.PYTHON_VERSION}}-${{env.TODAY}}-${{hashFiles(env.CONDA_ENV_FILE)}}"
          create-args: |
            python=${{ env.PYTHON_VERSION }}
      - name: Install flox
        run: |
          python -m pip install --no-deps -e .
      - name: Version info
        run: |
          conda info -a
          conda list
      - name: Install mypy
        run: |
          python -m pip install mypy

      - name: Run mypy
        run: |
          mkdir .mypy_cache
          python -m mypy --install-types --non-interactive --cache-dir=.mypy_cache/ --cobertura-xml-report mypy_report

      - name: Upload mypy coverage to Codecov
        uses: codecov/codecov-action@v5.4.0
        with:
          file: mypy_report/cobertura.xml
          flags: mypy
          env_vars: PYTHON_VERSION
          name: codecov-umbrella
          fail_ci_if_error: false
