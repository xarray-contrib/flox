name: CI Additional
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "*"
  workflow_dispatch: # allows you to trigger manually

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-ci-trigger:
    name: detect ci trigger
    runs-on: ubuntu-latest
    if: |
      github.repository == 'xarray-contrib/flox'
      && (github.event_name == 'push' || github.event_name == 'pull_request')
    outputs:
      triggered: ${{ steps.detect-trigger.outputs.trigger-found }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 2
      - uses: xarray-contrib/ci-trigger@v1.2
        id: detect-trigger
        with:
          keyword: "[skip-ci]"

  doctest:
    name: Doctests
    runs-on: "ubuntu-latest"
    needs: detect-ci-trigger
    if: needs.detect-ci-trigger.outputs.triggered == 'false'
    env:
      PYTHON_VERSION: "3.13"

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.

      - name: Set up Python and uv
        uses: astral-sh/setup-uv@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Install dependencies
        run: |
          uv sync --group complete --no-dev
      - name: Version info
        run: |
          uv pip list
      - name: Run doctests
        run: |
          uv run --no-dev python -m pytest --doctest-modules \
          flox/aggregations.py flox/core.py flox/xarray.py \
          --ignore flox/tests \
          --cov=./ --cov-report=xml
      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v5.5.0
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: RUNNER_OS
          name: codecov-umbrella
          fail_ci_if_error: false

  mypy:
    name: Mypy
    runs-on: "ubuntu-latest"
    needs: detect-ci-trigger
    if: needs.detect-ci-trigger.outputs.triggered == 'false'
    env:
      PYTHON_VERSION: "3.13"

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.

      - name: Set up Python and uv
        uses: astral-sh/setup-uv@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Install dependencies
        run: |
          uv sync --group complete --no-dev --group types
      - name: Version info
        run: |
          uv pip list

      - name: Run mypy
        run: |
          mkdir .mypy_cache
          uv run --no-dev mypy --cache-dir=.mypy_cache/ --cobertura-xml-report mypy_report

      - name: Upload mypy coverage to Codecov
        uses: codecov/codecov-action@v5.5.0
        with:
          file: mypy_report/cobertura.xml
          flags: mypy
          env_vars: PYTHON_VERSION
          name: codecov-umbrella
          fail_ci_if_error: false
