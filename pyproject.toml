[project]
name = "flox"
description = "GroupBy operations for dask.array"
license = {file = "LICENSE"}
readme = "README.md"
requires-python = ">=3.10"
keywords = ["xarray", "dask", "groupby"]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "pandas>=1.5",
    "packaging>=21.3",
    "numpy>=1.22",
    "numpy_groupies>=0.9.19",
    "toolz",
    "scipy>=1.9",
]
dynamic=["version"]


[project.urls]
homepage = "https://flox.readthedocs.io"
documentation = "https://flox.readthedocs.io"
repository = "https://github.com/xarray-contrib/flox.git"
changelog = "https://github.com/xarray-contrib/flox/releases"

[project.optional-dependencies]
all = ["cachey", "dask", "numba", "numbagg", "xarray"]
test = ["netCDF4"]

[build-system]
requires = [
    "pandas>=1.5",
    "numpy>=1.22",
    "numpy_groupies>=0.9.19",
    "scipy>=1.9",
    "toolz",
    "setuptools>=61.0.0",
    "setuptools_scm[toml]>=7.0",
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["flox"]

[tool.setuptools.dynamic]
version = {attr = "flox.__version__"}

[tool.setuptools_scm]
fallback_version = "999"
write_to = "flox/_version.py"
write_to_template= '__version__ = "{version}"'

[tool.ruff]
line-length = 110
target-version = "py310"
builtins = ["ellipsis"]
exclude = [
    ".eggs",
    "doc",
]

[tool.ruff.lint]
# E402: module level import not at top of file
# E501: line too long - let black worry about that
# E731: do not assign a lambda expression, use a def
ignore = [
    "E402",
    "E501",
    "E731",
]
select = [
    # Bugbear
    # "B",
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I",
    # Pyupgrade
    "UP",
]

[tool.ruff.lint.isort]
known-first-party = ["flox"]
known-third-party = [
    "dask",
    "numpy",
    "numpy_groupies",
    "pandas",
    "pkg_resources",
    "pytest",
    "setuptools",
    "scipy",
    "xarray"
]

[tool.ruff.format]
# Enable reformatting of code snippets in docstrings.
docstring-code-format = true

[tool.mypy]
allow_redefinition = true
files = "**/*.py"
show_error_codes = true
warn_unused_ignores = true
warn_unreachable = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
exclude=["asv_bench/pkgs"]

[[tool.mypy.overrides]]
module=[
    "asv_runner.*",
    "cachey",
    "cftime",
    "cubed.*",
    "dask.*",
    "importlib_metadata",
    "numba",
    "numbagg.*",
    "numpy_groupies.*",
    "matplotlib.*",
    "pandas",
    "setuptools",
    "scipy.*",
    "toolz.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "--tb=short"
minversion = "7"
testpaths = ["tests"]


[tool.codespell]
ignore-words-list = "nd,nax"
skip = "*.html"
