[project]
name = "flox"
description = "GroupBy operations for dask.array"
license = "Apache-2.0"
readme = "README.md"
requires-python = ">=3.11"
keywords = ["xarray", "dask", "groupby"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "pandas>=2.1",
    "packaging>=21.3",
    "numpy>=1.26",
    "numpy_groupies>=0.9.19",
    "toolz",
    "scipy>=1.12",
]
dynamic=["version"]


[project.urls]
homepage = "https://flox.readthedocs.io"
documentation = "https://flox.readthedocs.io"
repository = "https://github.com/xarray-contrib/flox.git"
changelog = "https://github.com/xarray-contrib/flox/releases"

[project.optional-dependencies]
all = ["cachey", "dask", "numba", "numbagg", "xarray"]
test = ["netCDF4"]
docs = [
    "cubed>=0.20.0",
    "cubed-xarray",
    "dask",
    "xarray",
    "numpydoc",
    "matplotlib",
    "myst-parser",
    "myst-nb",
    "sparse",
    "sphinx",
    "sphinx-remove-toctrees",
    "furo>=2024.08",
    "ipykernel",
    "jupyter",
    "sphinx-codeautolink",
    "sphinx-copybutton",
    "pyarrow",
]

[build-system]
requires = [
    "pandas>=2.1",
    "numpy>=1.26",
    "numpy_groupies>=0.9.19",
    "scipy>=1.12",
    "toolz",
    "setuptools>=61.0.0",
    "setuptools_scm[toml]>=7.0",
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["flox"]

[tool.setuptools.dynamic]
version = {attr = "flox.__version__"}

[tool.setuptools_scm]
fallback_version = "999"
write_to = "flox/_version.py"
write_to_template= '__version__ = "{version}"'

[tool.ruff]
line-length = 110
target-version = "py311"
builtins = ["ellipsis"]
exclude = [
    ".eggs",
    "doc",
]

[tool.ruff.lint]
# E402: module level import not at top of file
# E501: line too long - let black worry about that
# E731: do not assign a lambda expression, use a def
ignore = [
    "E402",
    "E501",
    "E731",
]
select = [
    # Bugbear
    # "B",
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I",
    # Pyupgrade
    "UP",
    # flake8-tidy-imports
    "TID",
]

[tool.ruff.lint.isort]
known-first-party = ["flox"]
known-third-party = [
    "dask",
    "numpy",
    "numpy_groupies",
    "pandas",
    "pkg_resources",
    "pytest",
    "setuptools",
    "scipy",
    "xarray"
]

[tool.ruff.format]
# Enable reformatting of code snippets in docstrings.
docstring-code-format = true

[tool.mypy]
allow_redefinition = true
files = "**/*.py"
show_error_codes = true
warn_unused_ignores = true
warn_unreachable = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
exclude=["asv_bench/pkgs"]

[[tool.mypy.overrides]]
module=[
    "asv_runner.*",
    "cachey",
    "cftime",
    "cubed.*",
    "dask.*",
    "importlib_metadata",
    "numba",
    "numbagg.*",
    "numpy_groupies.*",
    "matplotlib.*",
    "pandas",
    "setuptools",
    "scipy.*",
    "sparse.*",
    "toolz.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "--tb=short"
minversion = "7"
testpaths = ["tests"]


[tool.codespell]
ignore-words-list = "nd,nax,coo"
skip = "*.html"




[dependency-groups]
test = [
    "hypothesis",
    "pytest>=7",
    "pytest-cov",
    "pytest-pretty",
    "pytest-xdist",
    "syrupy",
    "pooch",
    "codecov",
    "pyarrow",
]
all = ["cachey", "dask", "numba", "numbagg>=0.3", "xarray"]
complete = [
    {include-group = "test"},
    "cachey",
    "dask",
    "numba",
    "numbagg>=0.3",
    "xarray",
    "asv",
    "cftime",
    "cubed>=0.20.0",
    "lxml",
    "matplotlib",
    "sparse",
    "zarr",
    "pre-commit",
]
minimal = [
    {include-group = "test"},
]
no-dask = [
    {include-group = "test"},
    "cftime",
    "sparse",
    "numpydoc",
    "numba",
    "numbagg>=0.3",
    "xarray",
    "pre-commit",
]
no-numba = [
    {include-group = "test"},
    "asv",
    "cachey",
    "cftime",
    "dask[core]",
    "sparse",
    "lxml",
    "matplotlib",
    "xarray",
    "pre-commit",
]
no-xarray = [
    {include-group = "test"},
    "sparse",
    "dask[core]",
    "numpydoc",
    "numba",
    "pre-commit",
]
numpy1 = [
    {include-group = "complete"},
]
docs = [
    "cubed>=0.20.0",
    "cubed-xarray",
    "dask",
    "xarray",
    "numpydoc",
    "matplotlib",
    "myst-parser",
    "myst-nb",
    "sparse",
    "sphinx",
    "sphinx-remove-toctrees",
    "furo>=2024.08",
    "ipykernel",
    "jupyter",
    "sphinx-codeautolink",
    "sphinx-copybutton",
]
benchmark = [
    "asv>=0.6.4",
    "py-rattler",
    "build",
    "cachey",
    "dask[core]",
    "xarray",
    "numbagg>=0.3",
    "wheel",
    "pyarrow",
]
upstream = [
    {include-group = "test"},
    "asv_runner",
    "cachey",
    "pooch",
    "hypothesis",
    "toolz",
    "pytest-reportlog",
    "cython>=0.29.20",
    "py-cpuinfo",
    "python-dateutil",
    "pytz",
]
upstream-dev = [
    {include-group = "upstream"},
    # These will be overridden by tool.uv.sources when this group is used
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "dask[core]",
    "numpy-groupies",
    "sparse",
    "cftime",
]
dev = [
    {include-group = "complete"},
    "dask[complete]",
    "pdbpp",
    "ipykernel",
    "snakeviz",
    "line_profiler",
    "memory-profiler",
    "memray",
]
types = [
    "mypy",
    "pandas-stubs",
    "types-PyYAML",
    "types-Pygments",
    "types-defusedxml",
    "types-docutils",
    "types-pexpect",
    "types-psutil",
    "types-pytz",
    "types-requests",
    "types-setuptools",
]

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true
